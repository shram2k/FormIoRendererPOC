angular.module("ngJsonExplorer", []).directive("jsonExplorer", ["$http", function (n) { "use strict"; return { restrict: "E", scope: { data: "=", jsonData: "=", url: "=", collapsed: "=", sortBy: "=" }, link: function (a, l, e) { function r(n) { var e = null; if (angular.isObject(n)) e = n; else try { e = JSON.parse(n) } catch (r) { return void (e = { error: "invalid json" }) } u(e) && a.sortBy && (e = e.sort(function (n, l) { var e = a.sortBy.split(":"), r = e[0], s = e[1], i = n[r], t = l[r], o = function (n, a) { return n - a }, u = function (n, a) { return n.length - a.length }, c = null; if ("number" == typeof i && "number" == typeof t) c = o; else { if (!i.hasOwnProperty("length") || !t.hasOwnProperty("length")) return; c = u } return "asc" == s ? c(i, t) : "desc" == s ? c(t, i) : c(i, t) })), u(e) ? g = '[<ul class="array">' : c(e) && (g = '{<ul class="object">'); for (var s in e) { var i = s, t = e[s]; o(t) ? g += "<li>" + p(i, t) + ",</li>" : u(t) ? g += "<li>" + d(i, t) + ",</li>" : c(t) && (g += "<li>" + f(i, t) + ",</li>") } g = g.replace(/,<\/li>$/gim, "</li>"), u(e) ? g += "</ul>]" : c(e) && (g += "</ul>}"), l.html('<div class="angular-json-explorer">' + g + "</div>"); for (var h = l[0].getElementsByTagName("a"), v = 0; v < h.length; v++) { var m = h[v]; angular.element(m).on("click", function (n) { n.preventDefault(); var a = angular.element(this).parent().next(), l = angular.element(this).parent().next().next(); "+" == this.innerHTML ? (a.addClass("hidden"), l.removeClass("hidden"), this.innerHTML = "-") : (a.removeClass("hidden"), l.addClass("hidden"), this.innerHTML = "+") }) } } angular.isBoolean || (angular.isBoolean = function (n) { return "boolean" == typeof n }); var s = "+", i = "", t = "hidden"; a.collapsed && (s = "-", i = "hidden", t = ""); var o = function (n) { return angular.isString(n) || angular.isNumber(n) || angular.isBoolean(n) || null === n }, u = function (n) { return angular.isArray(n) }, c = function (n) { return angular.isObject(n) }, p = function (n, a) { var l = ""; return n && (l = '<span class="prop>">' + n + "</span>: "), "string" == typeof a ? l + '<span class="string">"' + a + '"</span>' : "number" == typeof a ? l + '<span class="num">' + a + "</span>" : "boolean" == typeof a ? l + '<span class="bool">' + a + "</span>" : l + '<span class="null">' + a + "</span>" }, d = function (n, a) { var l = '<span class="prop>"><a href="#" class="collapser">' + s + "</a></span> ["; n && (l = '<span class="prop>"><a href="#" class="collapser">' + s + "</a>" + n + "</span>: ["), l += '<span class="ellipsis ' + i + '">...</span>', l += '<ul class="array collapsible ' + t + '">'; for (var e = 0; e < a.length; e++) o(a[e]) ? l += "<li>" + p(null, a[e]) + ",</li>" : u(a[e]) ? l += "<li>" + d(null, a[e]) + ",</li>" : c(a[e]) && (l += "<li>" + f(null, a[e]) + ",</li>"); return l = l.replace(/,<\/li>$/gim, "</li>"), l += "</ul>", l += "]" }, f = function (n, a) { var l = '<span class="prop>"><a href="#" class="collapser">' + s + "</a></span> {"; n && (l = '<span class="prop>"><a href="#" class="collapser">' + s + "</a>" + n + "</span>: {"), l += '<span class="ellipsis ' + i + '">...</span>', l += '<ul class="object collapsible ' + t + '">'; for (var e in a) o(a[e]) ? l += "<li>" + p(e, a[e]) + ",</li>" : u(a[e]) ? l += "<li>" + d(e, a[e]) + ",</li>" : c(a[e]) && (l += "<li>" + f(e, a[e]) + ",</li>"); return l = l.replace(/,<\/li>$/gim, "</li>"), l += "</ul>", l += "}" }, g = ""; a.$watch("url", function (l) { if (l) { var e; e = angular.isString(l) ? n.get(l) : n(l), e.success(function (n) { a.requestData = n }) } }), a.$watch("[data, jsonData]", function (n) { return n[0] ? void r(n[0]) : n[1] ? void r(n[1]) : void 0 }, !0), a.$watch("requestData", function (n) { n && r(n) }), a.$watch("collapsed", function (n) { if (void 0 != n) for (var a = l[0].getElementsByTagName("a"), e = 0; e < a.length; e++) { var r = a[e], s = angular.element(r).parent().next(), i = angular.element(r).parent().next().next(); 1 == n ? "-" == r.innerHTML && (s.removeClass("hidden"), i.addClass("hidden"), r.innerHTML = "+") : "+" == r.innerHTML && (s.addClass("hidden"), i.removeClass("hidden"), r.innerHTML = "-") } }) } } }]);